<html>
<head>
<meta id='metaFileNameId' name='id' content='25496' />
<title>Overview</title>
<link type='text/css' href='xstyle.css' rel='stylesheet' media='all' />
<script src='script.js' language='javascript' type='text/javascript'> </script>
<script src='common.js' language='javascript' type='text/javascript'> </script>
<xml>
<MSHelp:Attr Name="Product" Value="JChart">
</xml>
</head>
<body style='margin: 0;'>
<img src='collapse.png' title='Collapse Section' id='collapseImage' style='display: none; height: 0; width: 0;' /><img src='expand.png' title='Expand Section' id='expandImage' style='display: none; height: 0; width: 0;' /><img src='collapsesmall.png' title='Collapse All' id='collapseAllImage' style='display: none; height: 0; width: 0;' /><img src='expandsmall.png' title='Expand All' id='expandAllImage' style='display: none; height: 0; width: 0;' /><input type="hidden" id="userDataCache" class="userDataStyle"><img src='arrow.png' title='DropDown image' id='dropDownImage' style='display: none; height: 0; width: 0;' /><img src='arrowh.png' title='DropDown image' id='dropDownHoverImage' style='display: none; height: 0; width: 0;' /><img src='copycode.png' title='Copy Code' id='copyCodeImage' style='display: none; height: 0; width: 0;' /><img src='copycodeh.png' title='Copy Code' id='copyCodeHoverImage' style='display: none; height: 0; width: 0;' /><div id='nsbanner'>
<table class='bannerparthead' cellspacing='0'>
<tr>
<td><span class='gtitle'>MindFusion.Charting for Java Programmer's Guide</span></td>
</tr>
<tr>
<td style='border-bottom: solid 1px #C8CDDE;'><span class='title'>Overview</span></td>
</tr>
</table>
</div>
<div id='nstext'>
<p><span>MindFusion.Charting for Java Swing</span>&#160;provides two type of gauge components – oval and linear. The two types of gauges are represented by the <a id='79035' href='T_com_mindfusion_charting_components_gauges_OvalGauge.htm' title=''>OvalGauge</a> and <a id='78994' href='T_com_mindfusion_charting_components_gauges_LinearGauge.htm' title=''>LinearGauge</a> classes respectively. The purpose of the gauge controls is to visualize various quantities in two layouts – circular and linear.</p><h2>Structure</h2><p>The most important component of each gauge control are the scales contained within it. The scales are collections of gauge elements such as ticks, labels, pointers, and so on. The gauges are merely shells, which provide visual decoration to the shells nested within them. Scales can be added to the gauges programmatically or in design-time through the Scales collection. The image below demonstrates an oval gauge with a single scale added to it.</p><p><img src='GaugesOverview1.png' title='' hspace='0' vspace='0' align='' width='250' height='250'/></p><p>Removing the scale from the above gauge will result in an empty gauge control.</p><h2>Scales</h2><p>As previously mentioned the scales can contain ticks, labels, pointers, ranges and other elements. There are two types of scale corresponding to the two types of gauges – <a id='79044' href='T_com_mindfusion_charting_components_gauges_OvalScale.htm' title=''>OvalScale</a> and <a id='79002' href='T_com_mindfusion_charting_components_gauges_LinearScale.htm' title=''>LinearScale</a>, which share a common base class – <a id='78828' href='T_com_mindfusion_charting_components_gauges_BaseScale.htm' title=''>BaseScale</a>. The oval scale distributes its elements in a circle and the linear scale distributes its elements along a horizontal or vertical axis. The scales are responsible for arranging their contents. They also provide user interaction.</p><p>The following example adds a pointer to the gauge defined in the previous section:</p><p><img src='GaugesOverview2.png' title='' hspace='0' vspace='0' align='' width='250' height='250'/></p><p></p><p>To learn more about gauge scales, refer to the <a id='25497' href='Scales_5.htm' title=''>Scales</a> topic.</p><h2>Composition</h2>Gauge controls can contain more than just one scale. A common scenario is an oval gauge containing several concentric scales displaying different measures. The following code creates an oval scale that is used by an <a id='79035' href='T_com_mindfusion_charting_components_gauges_OvalGauge.htm' title=''>OvalGauge</a> that&#160;represents a watch:<p><table class='syntax' codeLanguage='Java' cellspacing='0'><tr><th><span style='float: left;'>Java</span>
<span class='copyCode' onclick='CopyCode(this);' onkeypress='CopyCode_CheckKey(this);' onmouseover='ChangeCopyCodeIcon(this, true);' onmouseout='ChangeCopyCodeIcon(this, false);'>
<img src='copycode.png' title='Copy Code' style='border-width: 0;' />&#160;Copy Code</span>
</th></tr><tr><td><p>OvalGauge ovalGauge = new OvalGauge();<br/>........................</p><p>OvalScale timeScale = new OvalScale();<br/>timeScale.beginInit();<br/>timeScale.setMargin(new Margins(0.075, 0.075, 0.075, 0.075));<br/>timeScale.setFill(new SolidBrush(Colors.Transparent));<br/>timeScale.setMinValue(0);<br/>timeScale.setMaxValue(43200);<br/>timeScale.setStartAngle(-90);<br/>timeScale.setEndAngle(270);<br/>&#160;&#160;<br/>timeScale.getMajorTickSettings().setTickShape(TickShape.Rectangle);<br/>timeScale.getMajorTickSettings().setShowLabels(false);<br/>timeScale.getMajorTickSettings().setCount(12);<br/>timeScale.getMajorTickSettings().setFill(new SolidBrush(new Color(0x5E6263)));<br/>timeScale.getMajorTickSettings().setStroke(new Pen(new Color(0x5E6263), 1));<br/>timeScale.getMajorTickSettings().setTickAlignment(Alignment.OuterInside);<br/>timeScale.getMajorTickSettings().setTickHeight(new Length(1, LengthType.Relative));<br/>&#160;&#160;<br/>timeScale.getMiddleTickSettings().setShowLabels(false);<br/>timeScale.getMiddleTickSettings().setCount(5);<br/>timeScale.getMiddleTickSettings().setFill(new GradientBrush(new Color(0xFBFCFC), new Color(0x8D9BA5), 0));<br/>timeScale.getMiddleTickSettings().setStroke(new Pen(Colors.Transparent, 1));<br/>timeScale.getMiddleTickSettings().setTickAlignment(Alignment.OuterInside);<br/>timeScale.getMiddleTickSettings().setTickHeight(new Length(3, LengthType.Relative));<br/>timeScale.getMiddleTickSettings().setTickWidth(new Length(3, LengthType.Relative));<br/><br/>..............<br/>clock.getScales().add(timeScale);&#160;&#160;</p></td></tr></table></p><p>The following image demonstrates the clock gauge:</p><p><img src='clock-gauge.png' title='' hspace='0' vspace='0' align='' width='381' height='379'/></p><h2>Customizing Gauges</h2><p>The customization of the gauge controls is achieved by performing custom painting of various gauge elements. This is done by handling one or more of the paint events. Two events raised for each gauge element – a Prepaint* event and a *Paint event. The first event is raised before the default rendering of the element and can be used to paint before and/or cancel the default rendering. The second event is raised after the default rendering has completed. For example, the events raised for the gauge background are PrepaintBackground and PaintBackground. For a complete list of the available paint events, see <span class='outsideLink'>Events</span>.</p><h2>Oval Gauge Styles</h2>There are several built-in gauge styles for quadratic and semicircular gauges. These styles can be enabled through the <a id='79040' href='M_com_mindfusion_charting_components_gauges_OvalGauge_getStyle_0.htm' title=''>Style</a> property of the <a id='79035' href='T_com_mindfusion_charting_components_gauges_OvalGauge.htm' title=''>OvalGauge</a> class. The image below illustrates the QuadraticNW style:<p><img src='GaugesOverview4.png' title='' hspace='0' vspace='0' align='' width='250' height='250'/></p>
</div>
<div id='nsfooter'>
<table class='footer' cellspacing='0'>
<tr>
<td valign='middle'>
<span class='copyright'>© 2022 MindFusion</span>
</td>
</tr>
</table>
</div>
</body>
</html>
